Is she right?
As part of your job requirements at Google, you are occasionally asked to
interview candidates for employment.
One of your favorite questions is “show me some code segment that you deem
particularly “interesting …” ”
The candidate you are currently interviewing shows you the following c++
expression:
((n&(n-1)) == 0)
As you scratch your head, she says “this returns true if n is either zero or a power
of 2.”
Is she correct in her claim?
Prove or disprove.


Ans:  Yes she is correct in her claim. 
The single ampersand represents a bitwise AND operation. A bitwise operator returns the result of a comparison between each corresponding bit in the two operands.

For example, if n is 100 (power of 2), n-1 will be 11, then a bitwise AND of n and n-1 will result in 0 which is indeed equal to 0.
Therefore ((n&(n-1))===0) evaluates to true. Likewise it evaluates to true only when n is power of two or zero.


However it is not a good practice to do that since single ampersand could mean different thing in different programming language.
It might be right in case of C/C++ but would not be the case in other languages like Javacript, Python and as the context says 
it is a google interview, i think it would be important to emphasize that at least that would be correct for C/C++. 